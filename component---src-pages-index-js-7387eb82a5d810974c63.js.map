{"version":3,"sources":["webpack:///./src/components/utils/card.js","webpack:///./src/components/title/title.js","webpack:///./src/components/car/spec.js","webpack:///./src/functions/url.js","webpack:///./src/components/car/car.js","webpack:///./src/pages/index.js","webpack:///./src/functions/storage.js","webpack:///./src/constants.js"],"names":["Card","empty","marginCard","index","edit","render","editButtonId","title","classCard","cardStyles","card","push","cardWithoutCar","cardWithCar","className","join","id","iconButtonContainer","type","iconButton","onClick","icon","carLabelContainer","carLabel","defaultProps","Title","titleStyles","titleContainer","div","chromeText","animate","backgroundImage","transition","duration","ease","subTitle","Spec","power","weight","officialWeight","imageUrl","theWeight","ratio","Math","round","barPowerStyle","width","barWeightStyle","barRatioStyle","imageOrigin","fullHost","indexOfLastDot","lastIndexOf","tld","substr","domainName","indexOfSecondDot","extractHostname","Uri","uriParts","host","specStyles","bars","barTitle","bar","barPower","style","barWeight","barRatio","href","Car","car","carFullname","fullname","useState","currentPageIndex","setCurrentPageIndex","mongodb_id","divContent","img","src","carStyles","image","alt","initial","opacity","brand","model","name","variant","startYear","selectedFavcarsUrl","imageContainer","carCaption","switchButtons","size","carTitle","carLongLabel","carYear","carComponentId","Garage","props","uri","location","editParam","getQueryParamValue","carParam","initState","saveMessage","replaceQueryParam","saveOk","deleteQueryParam","windowGlobal","window","cars","eachCar","param","idx","carId","localStorage","getItem","foundNode","data","allMongodbBmbu7Ynqra11RqiCars","edges","find","node","addQueryParam","removeItem","toString","every","val","state","setTimeout","eachCarIndex","editButtonIdx","document","querySelector","this","editCar","newUri","setPath","carElements","map","carLabels","thumbnail","indexStyles","carComponent","noCarThumbnail","key","transform","filter","s","save","garageName","serialized","JSON","stringify","setItem","setState","saveDisabled","pathname","description","carsContainer","React","Component","query"],"mappings":"oRAKaA,EAAO,SAAC,GAEd,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,WAAYC,EACf,EADeA,MAAOC,EACtB,EADsBA,KAAMC,EAC5B,EAD4BA,OAAQC,EACpC,EADoCA,aAAcC,EAClD,EADkDA,MAEhDC,EAAY,CAACC,IAAWC,MAS9B,OARIR,GACFM,EAAUG,KAAKF,IAAWP,YAExBD,EACFO,EAAUG,KAAKF,IAAWG,gBAE1BJ,EAAUG,KAAKF,IAAWI,aAG1B,yBAAKC,UAAWN,EAAUO,KAAK,MAC7B,yBAAKC,GAAIV,EAAcQ,UAAWL,IAAWQ,qBAC3C,4BAAQC,KAAK,SAASJ,UAAcL,IAAWU,WAAhB,eAA0CC,QAAS,kBAAMhB,EAAKD,KAC3F,kBAAC,IAAD,CAAiBkB,KAAK,WAGzBhB,IACD,yBAAKS,UAAW,CAACL,IAAWa,kBAAmB,YAAa,WAAWP,KAAK,MAC1E,0BAAMD,UAAW,CAACL,IAAWc,SAAU,SAASR,KAAK,MAAOR,MAgBpEP,EAAKwB,aAAe,CAClBtB,YAAY,EACZD,OAAO,G,qCCxCIwB,EAAQ,WAenB,OACE,yBAAKX,UAAW,CAACY,IAAYC,eAAgB,SAASZ,KAAK,MACzD,wBAAID,UAAW,CAACY,IAAYnB,OAAOQ,KAAK,MACtC,kBAAC,IAAOa,IAAR,CACEd,UAAWY,IAAYG,WACvBC,QAnBe,CACrBC,gBAAiB,CACf,8CACA,8CACA,8CACA,gDAeIC,WAXgB,CACtBC,SAAU,EACVC,KAAM,cAMF,mBAQF,wBAAIpB,UAAWY,IAAYS,UAA3B,mD,kECrBS,SAASC,EAAT,GAA4D,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,eAAgBC,EAAY,EAAZA,SACtDC,EAAYH,GAAUC,EAEtBG,EAAQC,KAAKC,MAAmB,GAAZH,EAAkBJ,GAAS,GAE/CQ,EAAgB,CACpBC,MAAmB,IAART,EAVG,KAUT,KAGDU,EAAiB,CACrBD,MAAuB,IAAZL,EAbI,KAaV,KAGDO,EAAgB,CACpBF,MAAmB,IAARJ,EAhBG,GAgBT,KAIDO,EC3BuB,SAAAC,GAC7B,IAAID,EAAc,KAClB,GAAIC,EAAU,CACZ,IAAMC,EAAiBD,EAASE,YAAY,KAC5C,GAAID,GAAkB,EAAG,CACvB,IAAME,EAAMH,EAASI,OAAOH,GACtBI,EAAaL,EAASI,OAAO,EAAGH,GAChCK,EAAmBD,EAAWH,YAAY,KAOhDH,EAAW,IALPO,GAAoB,EACXD,EAAWD,OAAOE,EAAmB,GAErCD,GAEeF,GAGhC,OAAOJ,EDUaQ,CADH,IAAIC,IAAIlB,GACoBmB,SAASC,MAEtD,OACE,6BAAS9C,UAAW+C,IAAWnD,MAC7B,6BAASI,UAAW+C,IAAWC,MAC7B,yBAAKhD,UAAW+C,IAAWE,UACzB,6CACA,8BACE,0BAAMjD,UAAW+C,IAAWxB,OAAQA,GADtC,OAKF,yBAAKvB,UAAW,CAAC+C,IAAWG,IAAKH,IAAWI,UAAUlD,KAAK,KAAMmD,MAAOrB,IACxE,yBAAK/B,UAAW+C,IAAWE,UACzB,yCAAezB,EAAS,WAAa,YACrC,8BACE,0BAAMxB,UAAW+C,IAAWvB,QAASG,GADvC,OAKF,yBAAK3B,UAAW,CAAC+C,IAAWG,IAAKH,IAAWM,WAAWpD,KAAK,KAAMmD,MAAOnB,IACzE,yBAAKjC,UAAW+C,IAAWE,UACzB,2CACA,8BACE,0BAAMjD,UAAW+C,IAAWnB,OAAQA,GADtC,UAKF,yBAAK5B,UAAW,CAAC+C,IAAWG,IAAKH,IAAWO,UAAUrD,KAAK,KAAMmD,MAAOlB,IACxE,4CAEE,uBAAGqB,KAAK,4BAAR,sBAEDpB,GACC,2CAEE,uBAAGoB,KAAI,UAAYpB,GAAgBA,MEvDxC,IAAMqB,EAAM,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACdC,EAAcC,YAASF,GADC,EAGkBG,mBAAS,GAAlDC,EAHuB,KAGLC,EAHK,KAKxBpC,EAAQ,WAAc+B,EAAIM,WAAlB,eAUVC,EAAa,KAyBjB,OAvBEA,EADuB,IAArBH,EAEA,kBAAC,IAAOI,IAAR,CACEC,IAAKxC,EACL1B,UAAWmE,IAAUC,MACrBC,IAAKX,EACLY,QAAS,CAAEC,QAAS,GACpBvD,QAAS,CAAEuD,QAAS,KAKtB,kBAACjD,EAAD,CACEkD,MAAOf,EAAIgB,MAAMD,MAAME,KACvBC,QAASlB,EAAIkB,QACbpD,MAAOkC,EAAIlC,MACXC,OAAQiC,EAAIjC,OACZC,eAAgBgC,EAAIhC,eACpBmD,UAAWnB,EAAImB,UACflD,SAAU+B,EAAIoB,qBAMlB,6BAAS7E,UAAWmE,IAAUvE,MAE5B,yBAAK2D,KAAME,EAAI/B,SAAU1B,UAAWmE,IAAUW,gBAC1Cd,GAGJ,yBAAKhE,UAAWmE,IAAUY,YACxB,yBAAK/E,UAAWmE,IAAUa,eAED,IAArBnB,GAEE,4BAAQzD,KAAK,SAASJ,UAAW,CAAC,cAAe,OAAQmE,IAAU9D,YAAYJ,KAAK,MAClF,kBAAC,IAAD,CAAiBM,KAAK,QAAQ0E,KAAK,KAAK3E,QA9CpC,WAChBwD,EAAoBD,EAAmB,OAkDV,IAArBA,GAEA,4BAAQzD,KAAK,SAASJ,UAAW,CAAC,cAAe,OAAQmE,IAAU9D,YAAYJ,KAAK,MAClF,kBAAC,IAAD,CAAiBM,KAAK,eAAe0E,KAAK,KAAK3E,QAlDxC,WACjBwD,EAAoBD,EAAmB,QAsDnC,yBAAK7D,UAAWmE,IAAUe,UACxB,wBAAIlF,UAAWmE,IAAUgB,aAAc1F,MAAOiE,GAAcA,IAE9D,yBAAK1D,UAAWmE,IAAUiB,SAAU3B,EAAImB,c,sCC9DhD,IAAMS,EAAiB,SAAAhG,GAAK,aAAWA,GACjCG,EAAe,SAAAH,GAAK,cAAYA,GAEhCiG,E,oBACJ,WAAYC,GAAQ,IAAD,EACjB,cAAMA,IAAN,KAEA,IAAMC,EAAM,IAAI5C,IAAI2C,EAAME,SAASlC,MAG7BmC,EAAYF,EAAIG,mBAAmB,QACnCC,EAAWJ,EAAIG,mBAAmB,OAClCE,EAAY,CAChBC,YAAa,MAEXJ,GAAaE,IACfJ,EAAIO,kBAAJ,MAA4BL,EAAaE,GACzCC,EAAUG,QAAS,GAErBR,EAAIS,iBAAiB,QACrBT,EAAIS,iBAAiB,OAGrB,IAAMC,EAAiC,oBAAXC,QAA0BA,OAnBrC,OAoBjBN,EAAUO,KAAO,GACbF,GACFG,aAAQ,SAACC,EAAOC,GACdV,EAAUO,KAAKG,GAAO,KAGtB,IAAMC,EAAQhB,EAAIG,mBAAmBW,IAAUG,aAAaC,QAAQJ,GAEpE,GAAIE,EAAO,CACT,IAAMG,EAAYpB,EAAMqB,KAAKC,8BAA8BC,MACxDC,MAAK,qBAAGC,KAAoBjD,aAAeyC,KAE1CG,GACGnB,EAAIG,mBAAmBW,IAE1Bd,EAAIyB,cAAcX,EAAOK,EAAUK,MAErCnB,EAAUO,KAAKG,GAAOI,EAAUK,MACtBxB,EAAIG,mBAAmBW,IAEjCG,aAAaS,WAAWZ,OAKhCT,EAAUL,IAAMA,EAAI2B,WAGhBjB,IACFL,EAAUG,OAASK,aAAQ,SAACC,EAAOC,GAAR,OAAgBV,EAAUO,KAAKG,KAASE,aAAaC,QAAQJ,MACrFc,OAAM,SAAAC,GAAG,QAAMA,MAGpB,EAAKC,MAAQzB,EAETK,GACFqB,YAAW,WACTC,aAAa,SAAAC,GACXC,SAASC,cAAT,IAA2BnI,EAAaiI,EAAgB,IAAMrE,MAAMmB,QAAU,SAE/E,KA5DY,E,0GAgEnBhF,OAAA,WAAU,IAAD,SAGHqI,KAAKN,MADP9B,EAFK,EAELA,IAAKQ,EAFA,EAEAA,OAAQI,EAFR,EAEQA,KAAMN,EAFd,EAEcA,YAInBL,EACEmC,KAAKrC,MADPE,SAGIoC,EAAU,SAAAxI,GACd,IAAMyI,EAAS,IAAIlF,IAAI4C,GACvBsC,EAAOC,QAAQ,WACfD,EAAOb,cAAc,OAAQ5H,GAC7B8G,OAAOV,SAASlC,KAAOuE,EAAOX,YA+B1Ba,EAAc5B,EAAK6B,KAAI,SAACxE,EAAK8C,GAAN,OA5BX,SAAC9C,EAAKpE,GACtB,IAAMI,EAAQyI,IAAU7I,EAAQ,GAC1B8I,EAAY1E,EAChB,kBAAC,EAAD,CACEvD,GAAImF,EAAehG,GACnBI,MAAOA,EACPO,UAAWoI,IAAYC,aACvB5E,IAAKA,EACLa,QAAS,CAAEC,QAAS,GACpBvD,QAAS,CAAEuD,QAAS,KAGtB,yBAAKvE,UAAWoI,IAAYE,gBAA5B,KAEF,OACE,kBAAC,EAAD,CACEC,IAAG,QAAU9E,EAAIM,WACjB3E,WAAsB,IAAVC,EACZF,OAAQsE,EACRpE,MAAOA,EACPI,MAAOA,EACPH,KAAMuI,EACNtI,OAAQ,kBAAO4I,GACf3I,aAAcA,EAAaH,KAKUmJ,CAAU/E,EAAK8C,EAAM,MAQ1D9G,EAAQ2G,EAAK6B,KAAI,SAAAxE,GAAG,OAAKA,EAAME,YAASF,GAAO,QAClDgF,QAAO,SAAAC,GAAC,QAAMA,KACdzI,KAAK,MAER,OACE,kBAAC,IAAD,CACEwF,SAAUD,EACVmD,KAbW,WACb,IAAMC,EClIQ,SAAAxC,GAClB,IAAMwC,EAAaxC,EAAK6B,KAAI,SAAAxE,GAAG,OAAIA,EAAIgB,MAAMC,QAAMzE,KAAK,KAClD4I,EAAaC,KAAKC,UAAU3C,GAElC,OADAK,aAAauC,QAAQJ,EAAYC,GAC1BD,ED8HgBD,CAAKvC,GACxB,EAAK6C,SAAS,CAAEjD,QAAQ,EAAMF,YAAY,sBAAuB8C,EAAxB,MACzCrB,YAAW,kBAAM,EAAK0B,SAAS,CAAEnD,YAAa,SAAS,MAWrDrG,MAAOA,EACP+F,IAAKA,EACL0D,aAAclD,EACdF,YAAaA,GAEb,kBAAC,IAAD,CACEL,SAAUA,EAAS0D,SACnB1J,MAAOA,EACP+F,IAAKA,EACL4D,YAAY,gEAEd,kBAAC,EAAD,MACA,6BAASpJ,UAAWoI,IAAYiB,eAC7BrB,K,GA1IUsB,IAAMC,WAkLdC,EAAK,aAyBHlE,a,kCE7Nf,kCAAO,IAAM4C,EAAY,CACvB,QACA,YACA","file":"component---src-pages-index-js-7387eb82a5d810974c63.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport cardStyles from './card.module.scss';\n\nexport const Card = ({\n  empty, marginCard, index, edit, render, editButtonId, title,\n}) => {\n  const classCard = [cardStyles.card];\n  if (marginCard) {\n    classCard.push(cardStyles.marginCard);\n  }\n  if (empty) {\n    classCard.push(cardStyles.cardWithoutCar);\n  } else {\n    classCard.push(cardStyles.cardWithCar);\n  }\n  return (\n    <div className={classCard.join(' ')}>\n      <div id={editButtonId} className={cardStyles.iconButtonContainer}>\n        <button type=\"button\" className={`${cardStyles.iconButton} icon-button`} onClick={() => edit(index)}>\n          <FontAwesomeIcon icon=\"edit\" />\n        </button>\n      </div>\n      {render()}\n      <div className={[cardStyles.carLabelContainer, 'container', 'is-full'].join(' ')}>\n        <span className={[cardStyles.carLabel, 'badge'].join(' ')}>{title}</span>\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  marginCard: PropTypes.bool,\n  empty: PropTypes.bool,\n  index: PropTypes.number.isRequired,\n  edit: PropTypes.func.isRequired,\n  render: PropTypes.func.isRequired,\n  editButtonId: PropTypes.string.isRequired,\n};\n\nCard.defaultProps = {\n  marginCard: false,\n  empty: false,\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport titleStyles from './title.module.scss';\n\nexport const Title = () => {\n  const titleAnimation = {\n    backgroundImage: [\n      'linear-gradient(to right, #EEE, #666, #444)',\n      'linear-gradient(to right, #666, #EEE, #666)',\n      'linear-gradient(to right, #666, #666, #EEE)',\n      'linear-gradient(to right, #CCC, #EEE, #CCC)',\n    ],\n  };\n\n  const titleTransition = {\n    duration: 1,\n    ease: 'easeInOut',\n  };\n\n  return (\n    <div className={[titleStyles.titleContainer, 'badge'].join(' ')}>\n      <h1 className={[titleStyles.title].join(' ')}>\n        <motion.div\n          className={titleStyles.chromeText}\n          animate={titleAnimation}\n          transition={titleTransition}\n        >\n          Perfect Garage\n        </motion.div>\n      </h1>\n      <h4 className={titleStyles.subTitle}>Votre garage idéal en trois voitures de sport</h4>\n    </div>\n  );\n};\n","import React from 'react';\nimport Uri from 'jsuri';\nimport specStyles from './spec.module.scss';\nimport { extractHostname } from '../../functions/url';\n\nconst POWER_MAX = 1200; // max 1200hp, else overflow\nconst WEIGHT_MAX = 2500; // max 2500kg, else overflow\nconst RATIO_MAX = 20; // max 1kg/hp else overflow\n\nexport default function Spec({ power, weight, officialWeight, imageUrl }) {\n  const theWeight = weight || officialWeight;\n\n  const ratio = Math.round((theWeight * 10) / power) / 10;\n\n  const barPowerStyle = {\n    width: `${(power * 100) / POWER_MAX}%`,\n  };\n\n  const barWeightStyle = {\n    width: `${(theWeight * 100) / WEIGHT_MAX}%`,\n  };\n\n  const barRatioStyle = {\n    width: `${(ratio * 100) / RATIO_MAX}%`,\n  };\n\n  const imageUri = new Uri(imageUrl);\n  const imageOrigin = extractHostname(imageUri.uriParts.host);\n\n  return (\n    <article className={specStyles.card}>\n      <section className={specStyles.bars}>\n        <div className={specStyles.barTitle}>\n          <legend>Puissance</legend>\n          <span>\n            <span className={specStyles.power}>{power}</span>\n            hp\n          </span>\n        </div>\n        <div className={[specStyles.bar, specStyles.barPower].join(' ')} style={barPowerStyle} />\n        <div className={specStyles.barTitle}>\n          <legend>Poids {weight ? 'constaté' : 'officiel'}</legend>\n          <span>\n            <span className={specStyles.weight}>{theWeight}</span>\n            kg\n          </span>\n        </div>\n        <div className={[specStyles.bar, specStyles.barWeight].join(' ')} style={barWeightStyle} />\n        <div className={specStyles.barTitle}>\n          <legend>Rapport</legend>\n          <span>\n            <span className={specStyles.ratio}>{ratio}</span>\n            kg/hp\n          </span>\n        </div>\n        <div className={[specStyles.bar, specStyles.barRatio].join(' ')} style={barRatioStyle} />\n        <legend>\n          Source :&nbsp;\n          <a href=\"http://weightcars-fr.com\">weightcars-fr.com</a>\n        </legend>\n        {imageOrigin && (\n          <legend>\n            Photo :&nbsp;\n            <a href={`http://${imageOrigin}`}>{imageOrigin}</a>\n          </legend>\n        )}\n      </section>\n    </article>\n  );\n}\n","export const extractHostname = fullHost => {\n  let imageOrigin = null;\n  if (fullHost) {\n    const indexOfLastDot = fullHost.lastIndexOf('.');\n    if (indexOfLastDot >= 0) {\n      const tld = fullHost.substr(indexOfLastDot);\n      const domainName = fullHost.substr(0, indexOfLastDot);\n      const indexOfSecondDot = domainName.lastIndexOf('.');\n      let hostname = null;\n      if (indexOfSecondDot >= 0) {\n        hostname = domainName.substr(indexOfSecondDot + 1);\n      } else {\n        hostname = domainName;\n      }\n      imageOrigin = `${hostname}${tld}`;\n    }\n  }\n  return imageOrigin;\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { motion } from 'framer-motion';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport carStyles from './car.module.scss';\nimport Spec from './spec';\nimport { fullname } from '../../functions/cars';\n\nexport const Car = ({ car }) => {\n  const carFullname = fullname(car);\n\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n\n  const imageUrl = `/images/${car.mongodb_id}-resized.jpg`;\n\n  const clickLeft = () => {\n    setCurrentPageIndex(currentPageIndex - 1);\n  };\n\n  const clickRight = () => {\n    setCurrentPageIndex(currentPageIndex + 1);\n  };\n\n  let divContent = null;\n  if (currentPageIndex === 0) {\n    divContent = (\n      <motion.img\n        src={imageUrl}\n        className={carStyles.image}\n        alt={carFullname}\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n      />\n    );\n  } else {\n    divContent = (\n      <Spec\n        brand={car.model.brand.name}\n        variant={car.variant}\n        power={car.power}\n        weight={car.weight}\n        officialWeight={car.officialWeight}\n        startYear={car.startYear}\n        imageUrl={car.selectedFavcarsUrl}\n      />\n    );\n  }\n\n  return (\n    <article className={carStyles.card}>\n\n      <div href={car.imageUrl} className={carStyles.imageContainer}>\n        { divContent }\n      </div>\n\n      <div className={carStyles.carCaption}>\n        <div className={carStyles.switchButtons}>\n          {\n            currentPageIndex === 1\n            && (\n              <button type=\"button\" className={['icon-button', 'icon', carStyles.iconButton].join(' ')}>\n                <FontAwesomeIcon icon=\"image\" size=\"2x\" onClick={clickLeft} />\n              </button>\n            )\n          }\n          {\n            currentPageIndex === 0\n            && (\n            <button type=\"button\" className={['icon-button', 'icon', carStyles.iconButton].join(' ')}>\n              <FontAwesomeIcon icon=\"exchange-alt\" size=\"2x\" onClick={clickRight} />\n            </button>\n            )\n          }\n        </div>\n        <div className={carStyles.carTitle}>\n          <h3 className={carStyles.carLongLabel} title={carFullname}>{carFullname}</h3>\n        </div>\n        <div className={carStyles.carYear}>{car.startYear}</div>\n      </div>\n\n    </article>\n  );\n};\n\nCar.propTypes = {\n  car: PropTypes.shape({\n    mongodb_id: PropTypes.string.isRequired,\n    variant: PropTypes.string.isRequired,\n    power: PropTypes.number,\n    officialWeight: PropTypes.number,\n    weight: PropTypes.number,\n    options: PropTypes.string,\n    startYear: PropTypes.string,\n    endYear: PropTypes.string,\n    imageUrl: PropTypes.string,\n    selectedFavcarsUrl: PropTypes.string,\n    model: PropTypes.shape({\n      brand: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      }),\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import Uri from 'jsuri';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport './bulma-theme.scss';\nimport { eachCar, eachCarIndex, fullname } from '../functions/cars';\nimport { save } from '../functions/storage';\nimport indexStyles from './index.module.scss';\nimport { carLabels } from '../constants';\nimport { Card } from '../components/utils/card';\nimport { Title } from '../components/title/title';\nimport { Layout } from '../components/layout';\nimport { SEO } from '../components/seo/seo';\nimport { Car } from '../components/car/car';\n\nconst carComponentId = index => `car-${index}`;\nconst editButtonId = index => `edit-${index}`;\n\nclass Garage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const uri = new Uri(props.location.href);\n\n    // if edit=X parameter, save car to carX parameter\n    const editParam = uri.getQueryParamValue('edit');\n    const carParam = uri.getQueryParamValue('car');\n    const initState = {\n      saveMessage: null,\n    };\n    if (editParam && carParam) {\n      uri.replaceQueryParam(`car${editParam}`, carParam);\n      initState.saveOk = false;\n    }\n    uri.deleteQueryParam('edit');\n    uri.deleteQueryParam('car');\n\n    // add missing params + save state\n    const windowGlobal = typeof window !== 'undefined' && window;\n    initState.cars = [];\n    if (windowGlobal) {\n      eachCar((param, idx) => {\n        initState.cars[idx] = null;\n\n        // Priority to URL if user copy paste shared garage\n        const carId = uri.getQueryParamValue(param) || localStorage.getItem(param);\n\n        if (carId) {\n          const foundNode = props.data.allMongodbBmbu7Ynqra11RqiCars.edges\n            .find(({ node: car }) => car.mongodb_id === carId);\n\n          if (foundNode) {\n            if (!uri.getQueryParamValue(param)) {\n              // If carId comes from localstorage and was not on URL, add it\n              uri.addQueryParam(param, foundNode.node);\n            }\n            initState.cars[idx] = foundNode.node;\n          } else if (!uri.getQueryParamValue(param)) {\n            // If carId comes from localstorage and was not found, remove it\n            localStorage.removeItem(param);\n          }\n        }\n      });\n    }\n    initState.uri = uri.toString();\n\n    // Save button enabled?\n    if (windowGlobal) {\n      initState.saveOk = eachCar((param, idx) => initState.cars[idx] === localStorage.getItem(param))\n        .every(val => !!val);\n    }\n\n    this.state = initState;\n\n    if (windowGlobal) {\n      setTimeout(() => {\n        eachCarIndex(editButtonIdx => {\n          document.querySelector(`#${editButtonId(editButtonIdx + 1)}`).style.opacity = '1';\n        });\n      }, 200);\n    }\n  }\n\n  render() {\n    const {\n      uri, saveOk, cars, saveMessage,\n    } = this.state;\n\n    const {\n      location,\n    } = this.props;\n\n    const editCar = index => {\n      const newUri = new Uri(uri);\n      newUri.setPath('/browse');\n      newUri.addQueryParam('edit', index);\n      window.location.href = newUri.toString();\n    };\n\n    const transform = (car, index) => {\n      const title = carLabels[index - 1];\n      const thumbnail = car ? (\n        <Car\n          id={carComponentId(index)}\n          title={title}\n          className={indexStyles.carComponent}\n          car={car}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n        />\n      ) : (\n        <div className={indexStyles.noCarThumbnail}>?</div>\n      );\n      return (\n        <Card\n          key={`card-${car.mongodb_id}`}\n          marginCard={index === 2}\n          empty={!car}\n          index={index}\n          title={title}\n          edit={editCar}\n          render={() => (thumbnail)}\n          editButtonId={editButtonId(index)}\n        />\n      );\n    };\n\n    const carElements = cars.map((car, idx) => transform(car, idx + 1));\n\n    const onSave = () => {\n      const garageName = save(cars);\n      this.setState({ saveOk: true, saveMessage: `Garage sauvegardé \"${garageName}\"` });\n      setTimeout(() => this.setState({ saveMessage: null }), 2000); // message will be displayed during 2s\n    };\n\n    const title = cars.map(car => (car ? fullname(car) : null))\n      .filter(s => !!s)\n      .join('\\n');\n\n    return (\n      <Layout\n        location={uri}\n        save={onSave}\n        title={title}\n        uri={uri}\n        saveDisabled={saveOk}\n        saveMessage={saveMessage}\n      >\n        <SEO\n          location={location.pathname}\n          title={title}\n          uri={uri}\n          description=\"Créez et partagez votre garage idéal en 3 voitures de sport\"\n        />\n        <Title />\n        <article className={indexStyles.carsContainer}>\n          {carElements}\n        </article>\n      </Layout>\n    );\n  }\n}\n\nGarage.propTypes = {\n  data: PropTypes.shape({\n    allMongodbBmbu7Ynqra11RqiCars: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            mongodb_id: PropTypes.string.isRequired,\n            variant: PropTypes.string.isRequired,\n            power: PropTypes.number,\n            officialWeight: PropTypes.number,\n            weight: PropTypes.number,\n            options: PropTypes.string,\n            startYear: PropTypes.string,\n            endYear: PropTypes.string,\n            imageUrl: PropTypes.string,\n            selectedFavcarsUrl: PropTypes.string,\n            model: PropTypes.shape({\n              brand: PropTypes.shape({\n                name: PropTypes.string.isRequired,\n              }),\n              name: PropTypes.string.isRequired,\n            }).isRequired,\n          }).isRequired,\n        }).isRequired,\n      ).isRequired,\n    }).isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    href: PropTypes.string.isRequired,\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport const query = graphql`query {\n    allMongodbBmbu7Ynqra11RqiCars {\n    edges {\n      node {\n          mongodb_id,\n          variant,\n          power,\n          officialWeight, \n          weight,\n          options,\n          startYear,\n          endYear,\n          imageUrl,\n          selectedFavcarsUrl,\n          model {\n              brand {\n                  name\n              }\n            name\n          }\n        }\n      }\n    }\n  }`;\n\nexport default Garage;\n","export const save = cars => {\n  const garageName = cars.map(car => car.model.name).join('/');\n  const serialized = JSON.stringify(cars);\n  localStorage.setItem(garageName, serialized);\n  return garageName;\n};\n","export const carLabels = [\n  'Daily',\n  'Collector',\n  'Perfs',\n];\n"],"sourceRoot":""}