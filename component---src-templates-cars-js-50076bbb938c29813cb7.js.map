{"version":3,"file":"component---src-templates-cars-js-50076bbb938c29813cb7.js","mappings":"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","sources":["webpack://perfect-garage/./src/components/utils/filtered-list.module.scss","webpack://perfect-garage/./src/components/utils/filtered-list.js","webpack://perfect-garage/./src/components/utils/list-item.js","webpack://perfect-garage/./src/components/utils/list-item.module.scss","webpack://perfect-garage/./src/functions/sort.js","webpack://perfect-garage/./src/templates/cars.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var list = \"filtered-list-module--list--jcHES\";\nexport var listHeader = \"filtered-list-module--listHeader--H8u8k\";\nexport var searchInput = \"filtered-list-module--searchInput--HbyqD\";","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as filteredListStyles from './filtered-list.module.scss';\n\nconst FilteredList = ({ title, render, filter }) => {\n  const [previousFilterValue, setPreviousFilterValue] = useState(null);\n  const [filterInputTimeout, setFilterInputTimeout] = useState(null);\n\n  const search = () => {\n    const input = document.querySelector('#search-input');\n    if (input.value !== previousFilterValue) { // if text has changed\n      clearTimeout(filterInputTimeout); // this will interrupt previous search\n      const timer = setTimeout(() => filter(input.value), 700); // this will trigger new search some delay\n\n      // we save timer and values for later calls\n      setFilterInputTimeout(timer);\n      setPreviousFilterValue(input.value);\n    }\n  };\n\n  return (\n    <>\n      <header className={['field', 'is-size-4', filteredListStyles.listHeader].join(' ')}>\n        <h1 className=\"has-text-light\">{title}</h1>\n        <p className=\"control has-text-dark has-icons-right\">\n          <input\n            id=\"search-input\"\n            type=\"text\"\n            onKeyUp={search}\n            className={[filteredListStyles.searchInput, 'input'].join(' ')}\n          />\n          <span className=\"icon is-right\">\n            <FontAwesomeIcon icon=\"search\" />\n          </span>\n        </p>\n      </header>\n      <ul className={filteredListStyles.list}>\n        {render()}\n      </ul>\n    </>\n  );\n};\n\nFilteredList.propTypes = {\n  title: PropTypes.string.isRequired,\n  render: PropTypes.func.isRequired,\n  filter: PropTypes.func.isRequired,\n};\n\nexport default FilteredList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as listItemStyles from './list-item.module.scss';\n\nconst ListItem = ({\n  id, name, image, onClick, selected, big,\n}) => {\n  const classNames = [listItemStyles.logoLink];\n  if (selected) {\n    classNames.push(listItemStyles.selected);\n  }\n\n  if (big) {\n    classNames.push(listItemStyles.logoLinkBig);\n  } else {\n    classNames.push(listItemStyles.logoLinkSmall);\n  }\n\n  return (\n    <button type=\"button\" className={classNames.join(' ')} onClick={() => onClick(id)}>\n      <figure>\n        <img src={image} alt={name} />\n        <figcaption>{name}</figcaption>\n      </figure>\n    </button>\n  );\n};\n\nListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool,\n  big: PropTypes.bool,\n};\n\nListItem.defaultProps = {\n  selected: false,\n  big: false,\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport var logoLink = \"list-item-module--logoLink--kpsH-\";\nexport var logoLinkSmall = \"list-item-module--logoLinkSmall--4A+qc\";\nexport var logoLinkBig = \"list-item-module--logoLinkBig--pmnhY\";\nexport var selected = \"list-item-module--selected--Nwx6Q\";","export const sortField = (a, b, field) => {\n  if (!a[field] && !b[field]) {\n    return 0;\n  }\n  if (!a[field]) {\n    return -1;\n  }\n  if (!b[field]) {\n    return 1;\n  }\n  if (a[field] === b[field]) {\n    return 0;\n  }\n  return a[field] < b[field] ? -1 : 1;\n};\n\nexport const sortCars = (x, y) => (\n  sortField(x, y, 'startYear') === 0 ? sortField(x, y, 'variant') : sortField(x, y, 'startYear')\n);\n\nexport const sortModels = (x, y) => (\n  sortField(x.brand, y.brand, 'name') === 0 ? sortField(x, y, 'name') : sortField(x.brand, y.brand, 'name')\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Uri from 'jsuri';\nimport { useIntl, navigate } from 'gatsby-plugin-react-intl';\nimport { graphql } from 'gatsby';\nimport FilteredList from '../components/utils/filtered-list';\nimport ListItem from '../components/utils/list-item';\nimport { Layout } from '../components/layout';\nimport { SEO } from '../components/seo/seo';\nimport { sortCars } from '../functions/sort';\nimport { extractRelativePathWithParams } from '../functions/url';\n\nconst Cars = ({ data, pageContext, location }) => {\n  const intl = useIntl();\n\n  const uri = new Uri(location.href);\n  const completeCarList = data.allMongodbBmbu7Ynqra11RqiCars.edges.map(({ node }) => node).sort(sortCars);\n  const [filteredCars, setFilteredCars] = useState(completeCarList);\n\n  const carComponents = filteredCars.map(car => {\n    const imageUrl = `/images/${car.mongodb_id}-resized.jpg`;\n    return (\n      <li key={car.mongodb_id}>\n        <ListItem\n          id={car.mongodb_id}\n          name={car.variant + (car.startYear ? ` - ${car.startYear}` : '')}\n          image={imageUrl}\n          big\n          onClick={() => {\n            uri.addQueryParam('car', car.mongodb_id);\n            uri.setPath('/');\n            navigate(extractRelativePathWithParams(uri));\n          }}\n        />\n      </li>\n    );\n  });\n\n  const search = value => {\n    const filtered = completeCarList.filter(car => car.variant.match(new RegExp(value, 'i')));\n    setFilteredCars(filtered);\n  };\n\n  const title = intl.formatMessage({ id: 'templates.cars.title' },\n    { brand: pageContext.brand, model: pageContext.model },\n  );\n\n  const description = intl.formatMessage({ id: 'templates.cars.description' },\n    { brand: pageContext.brand, model: pageContext.model },\n  );\n\n  return (\n    <Layout>\n      <SEO\n        uri={location.href}\n        location={location.pathname}\n        title={title}\n        description={description}\n      />\n      <FilteredList title={title} render={() => carComponents} filter={search} />\n    </Layout>\n  );\n};\n\nCars.propTypes = {\n  data: PropTypes.shape({\n    allMongodbBmbu7Ynqra11RqiCars: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            mongodb_id: PropTypes.string.isRequired,\n            variant: PropTypes.string.isRequired,\n            startYear: PropTypes.string,\n            model: PropTypes.shape({\n              brand: PropTypes.shape({\n                name: PropTypes.string.isRequired,\n              }),\n              name: PropTypes.string.isRequired,\n            }).isRequired,\n          }).isRequired,\n        }).isRequired,\n      ).isRequired,\n    }).isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    href: PropTypes.string.isRequired,\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n  pageContext: PropTypes.shape({\n    brand: PropTypes.string.isRequired,\n    model: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport const query = graphql`\n    query CarsByModel($brand: String, $model: String) {\n        allMongodbBmbu7Ynqra11RqiCars(filter: {model: {name: {eq: $model}, brand: { name: {eq: $brand}}}}) {\n        edges {\n          node {\n              mongodb_id,\n              variant,\n              startYear,\n              model {\n                  brand {\n                      name\n                  }\n                 name\n              }\n          }\n        }\n      }\n    }`;\n\nexport default Cars;\n"],"names":["listHeader","searchInput","title","render","filter","useState","previousFilterValue","setPreviousFilterValue","filterInputTimeout","setFilterInputTimeout","className","filteredListStyles","join","id","type","onKeyUp","input","document","querySelector","value","clearTimeout","timer","setTimeout","icon","ListItem","name","image","onClick","selected","big","classNames","push","src","alt","defaultProps","sortField","a","b","field","sortCars","x","y","sortModels","brand","data","pageContext","location","intl","useIntl","uri","Uri","href","completeCarList","allMongodbBmbu7Ynqra11RqiCars","edges","map","node","sort","filteredCars","setFilteredCars","carComponents","car","imageUrl","mongodb_id","key","variant","startYear","addQueryParam","setPath","navigate","extractRelativePathWithParams","formatMessage","model","description","pathname","filtered","match","RegExp"],"sourceRoot":""}